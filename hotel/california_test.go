package hotel

import (
	"strings"
	"testing"

	"github.com/smarty/assertions/should"
	"github.com/smarty/gunit"
)

func TestRunFixture(t *testing.T) {
	gunit.Run(new(RunFixture), t, gunit.Options.AllSequential())
}

type RunFixture struct {
	*gunit.Fixture
	output strings.Builder
}

func (this *RunFixture) Setup() {
	hotel = Hotel{
		money:         10,
		emptyRooms:    []int{100, 101, 102, 201, 202, 200, 301, 302, 300},
		employees:     []int{3, 3},
		occupiedRooms: map[int]string{},
	}
	startingHow = "string"
	Printer = StringPrinter{
		Builder: &this.output,
	}
}

func (this *RunFixture) TestQuit() {
	inputString = "quit"
	Run()
	this.So(this.output.String(), should.Equal, "Enter command (help if you don't know any): quit\n")
}

func (this *RunFixture) TestCheckInCheckOut() {
	inputString = "checkin\nbob\ncheckin\nfred\nview\nquit"
	Run()
	this.So(this.output.String(), should.Equal, "Enter command (help if you don't know any): checkin\nEnter the name of the person checking in: bob\nbob checked in to room 100\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: fred\nfred checked in to room 101\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $13\nTotal Rooms: 9\nHotel Occupancy: 22.2%\nHotel Vacancy: 77.8%\n\n--------------------------------------------------------------\nEmpty Rooms:  102 201 202 200 301 302 300\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by bob\nRoom 101: Occupied by fred\n\n--------------------------------------------------------------\nDirty Rooms: No dirty rooms\n\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): quit\n")
}

func (this *RunFixture) TestEverything() {
	inputString = "checkin\nJimothy\ncheckin\nTerry\ncheckin\nSandy\nview\ncheckout\nTerry\nclean\n101\n0\ncheckin\nSally\nview\npay\n0\n3\nview\nbuild\n104\ncheckin\nGeorge\ncheckin\nMegan\npay\n1\n2\nview\nhire\n1\ncheckout\nSally\ncheckout\nSandy\ncheckout\nGeorge\ncheckout\nMegan\nhire\n10\nview\nquit"
	Run()
	this.So(this.output.String(), should.Equal, "Enter command (help if you don't know any): checkin\nEnter the name of the person checking in: Jimothy\nJimothy checked in to room 100\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: Terry\nTerry checked in to room 101\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: Sandy\nSandy checked in to room 102\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $16\nTotal Rooms: 9\nHotel Occupancy: 33.3%\nHotel Vacancy: 66.7%\n\n--------------------------------------------------------------\nEmpty Rooms:  201 202 200 301 302 300\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by Jimothy\nRoom 101: Occupied by Terry\nRoom 102: Occupied by Sandy\n\n--------------------------------------------------------------\nDirty Rooms: No dirty rooms\n\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Terry\nTerry checked out of room 101\nEnter command (help if you don't know any): clean\nEnter the room number you'd like to clean: 101\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nEnter the number of the employee you wish to clean the room (blank for the happiest): 0\nRoom number 101 cleaned!\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: Sally\nSally checked in to room 201\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $19\nTotal Rooms: 9\nHotel Occupancy: 33.3%\nHotel Vacancy: 66.7%\n\n--------------------------------------------------------------\nEmpty Rooms:  202 200 301 302 300 101\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by Jimothy\nRoom 102: Occupied by Sandy\nRoom 201: Occupied by Sally\n\n--------------------------------------------------------------\nDirty Rooms: No dirty rooms\n\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 2\nEmployee 1: Happiness level = 3\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): pay\nEmployee 0: Happiness level = 2\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 0\nMoney:  19\nHow much do you want to pay? 3\nThey've been paid\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $16\nTotal Rooms: 9\nHotel Occupancy: 33.3%\nHotel Vacancy: 66.7%\n\n--------------------------------------------------------------\nEmpty Rooms:  202 200 301 302 300 101\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by Jimothy\nRoom 102: Occupied by Sandy\nRoom 201: Occupied by Sally\n\n--------------------------------------------------------------\nDirty Rooms: No dirty rooms\n\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 4\nEmployee 1: Happiness level = 3\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): build\nEnter the room number you'd like to build: 104\nRoom number 104 built!\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: George\nGeorge checked in to room 202\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: Megan\nMegan checked in to room 200\nEnter command (help if you don't know any): pay\nEmployee 0: Happiness level = 4\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 1\nMoney:  16\nHow much do you want to pay? 2\nThey've been paid\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $14\nTotal Rooms: 10\nHotel Occupancy: 50.0%\nHotel Vacancy: 50.0%\n\n--------------------------------------------------------------\nEmpty Rooms:  301 302 300 101 104\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by Jimothy\nRoom 102: Occupied by Sandy\nRoom 200: Occupied by Megan\nRoom 201: Occupied by Sally\nRoom 202: Occupied by George\n\n--------------------------------------------------------------\nDirty Rooms: No dirty rooms\n\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 4\nEmployee 1: Happiness level = 4\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): hire\nMoney:  14\nHow much do you want to pay the new employee? 1\nNew employee hired!\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Sally\nSally checked out of room 201\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Sandy\nSandy checked out of room 102\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: George\nGeorge checked out of room 202\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Megan\nMegan checked out of room 200\nEnter command (help if you don't know any): hire\nMoney:  13\nHow much do you want to pay the new employee? 10\nNew employee hired!\nEnter command (help if you don't know any): view\n--------------------------------------------------------------\nHotel Summary\n--------------------------------------------------------------\n\nTotal Money: $3\nTotal Rooms: 10\nHotel Occupancy: 10.0%\nHotel Vacancy: 50.0%\n\n--------------------------------------------------------------\nEmpty Rooms:  301 302 300 101 104\n--------------------------------------------------------------\n\nOccupied Rooms\n--------------------------------------------------------------\nRoom 100: Occupied by Jimothy\n\n--------------------------------------------------------------\nDirty Rooms: 201 102 202 200\n--------------------------------------------------------------\n\nEmployee Summary\n--------------------------------------------------------------\nEmployee 0: Happiness level = 4\nEmployee 1: Happiness level = 4\nEmployee 2: Happiness level = 1\nEmployee 3: Happiness level = 10\n--------------------------------------------------------------\n\nEnter command (help if you don't know any): quit\n")
}

func (this *RunFixture) TestErrorHandling() {
	inputString = "pay\n2\npay\n0\n100\npay\n0\n-1\nclean\n102\ncheckin\nDave\ncheckout\nSally\ncheckout\nDave\nclean\n102\n2\nclean\n100\nhire\n100\nhire\n-1\npay\n0\n10\nbuild\n100\nbuild\n104\nquit"
	Run()
	this.So(this.output.String(), should.Equal, "Enter command (help if you don't know any): pay\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 2\nno such employee\nEnter command (help if you don't know any): pay\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 0\nMoney:  10\nHow much do you want to pay? 100\nyou don't have that much money\nEnter command (help if you don't know any): pay\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 0\nMoney:  10\nHow much do you want to pay? -1\nyou must pay your employee a positive amount of money\nEnter command (help if you don't know any): clean\nEnter the room number you'd like to clean: 102\nRoom 102 isn't dirty\nEnter command (help if you don't know any): checkin\nEnter the name of the person checking in: Dave\nDave checked in to room 100\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Sally\nNobody staying at the hotel named Sally\nEnter command (help if you don't know any): checkout\nEnter the name of the person checking out: Dave\nDave checked out of room 100\nEnter command (help if you don't know any): clean\nEnter the room number you'd like to clean: 102\nRoom 102 isn't dirty\nEnter command (help if you don't know any): 2\nEnter command (help if you don't know any): clean\nEnter the room number you'd like to clean: 100\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nEnter the number of the employee you wish to clean the room (blank for the happiest): hire\nnot a number\nEnter command (help if you don't know any): 100\nEnter command (help if you don't know any): hire\nMoney:  11\nHow much do you want to pay the new employee? -1\nyou must pay your employee a positive amount of money\nEnter command (help if you don't know any): pay\nEmployee 0: Happiness level = 3\nEmployee 1: Happiness level = 3\nWhich employee do you want to pay? 0\nMoney:  11\nHow much do you want to pay? 10\nThey've been paid\nEnter command (help if you don't know any): build\nEnter the room number you'd like to build: 100\nroom already built\nEnter command (help if you don't know any): build\nEnter the room number you'd like to build: 104\nnot enough money\nEnter command (help if you don't know any): quit\n")
}

func (this *RunFixture) TestHelp() {
	inputString = "help\nyoyo\n123\nquit"
	Run()
	this.So(this.output.String(), should.Equal, "Enter command (help if you don't know any): help\nCommands:\n\nview - view summary of the hotel\ncheckin - check somebody in to the hotel\ncheckout - check somebody out of the hotel\nclean - tell somebody to clean a room\nbuild - expand the hotel\npay - pay a current employee\nhire - hire a new employee\nhelp - see all commands\n\nEnter command (help if you don't know any): yoyo\nEnter command (help if you don't know any): 123\nEnter command (help if you don't know any): quit\n")
}
